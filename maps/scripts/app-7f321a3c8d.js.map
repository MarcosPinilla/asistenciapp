{"version":3,"sources":["routes.js","index.js","app/components/toolbar/toolbar.component.js","app/components/peliculas/peliculas.service.js","app/components/peliculas/peliculas.component.js","app/components/login/login.service.js","app/components/login/login.component.js","app/components/login/interceptorApi.service.js","app/components/login/credentials.service.js","app/components/dashboard/dashboard.component.js","app/components/asignaturas/asignaturas.service.js","templateCacheHtml.js"],"names":["routesConfig","$stateProvider","$urlRouterProvider","$locationProvider","$httpProvider","html5Mode","hashPrefix","otherwise","state","url","component","isPrivate","interceptors","push","middlewareConfig","$state","CredentialsService","$transitions","onStart","trans","$to","to","isPago","name","isLogged","go","angular","module","config","$mdThemingProvider","theme","primaryPalette","accentPalette","warnPalette","backgroundPalette","dark","constant","toolbarCtrl","$rootScope","vm","this","logout","clearCredentials","$on","templateUrl","controller","controllerAs","$inject","peliculasService","$resource","API","id","service","peliculasCtrl","PeliculasService","peliculas","query","$promise","then","data","loginService","loginCtrl","LoginService","loginError","credentials","login","save","setToken","token","setUser","email","$emit","error","console","log","interceptorApi","request","headers","Authorization","getToken","Accept","responseError","response","status","credentialsService","localStorage","setItem","getItem","user","getUser","removeItem","dashboardCtrl","AsignaturaService","asignaturas","asignaturaService","run","$templateCache","put"],"mappings":"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","file":"../../scripts/app-7f321a3c8d.js","sourcesContent":["angular\r\n.module('app')\r\n.config(routesConfig)\r\n.run(middlewareConfig);\r\n\r\n/** @ngInject */\r\nfunction routesConfig($stateProvider, $urlRouterProvider, $locationProvider, $httpProvider) {\r\n  $locationProvider.html5Mode(true).hashPrefix('!');\r\n  $urlRouterProvider.otherwise('login');\r\n\r\n  $stateProvider\r\n  .state('login', {\r\n    url: '/login',\r\n    component: 'login',\r\n    isPrivate: false\r\n  })\r\n  .state('dashboard', {\r\n    url: '/dashboard',\r\n    component: 'dashboard',\r\n    isPrivate: true\r\n  });\r\n\r\n  $httpProvider.interceptors.push('InterceptorApi');\r\n}\r\n\r\nfunction middlewareConfig($state, CredentialsService, $transitions) {\r\n  // Funcion cada vez que se intenta acceder a una ruta\r\n  $transitions.onStart({}, function (trans) {\r\n    var isPrivate = trans.$to().isPrivate;\r\n    var isPago = trans.$to().isPago;\r\n    var to = trans.$to().name;\r\n    // Compruebo si esta logeado para acceder a rutas protegidas, si no esta logeado se va a la pesta√±a login\r\n    if (isPrivate && !CredentialsService.isLogged()) {\r\n      $state.go('login');\r\n    }\r\n    // Compruebo que quiera entrar a el login cuando ya esta logeado\r\n    if (to === 'login' && CredentialsService.isLogged() ) {\r\n      $state.go('dashboard.publicaciones');\r\n    }    \r\n\r\n  });\r\n}\r\n","angular\r\n  .module('app', ['ui.router', 'ngResource', 'ngMaterial'])\r\n  .config(function ($mdThemingProvider) {\r\n    $mdThemingProvider.theme('app')\r\n      .primaryPalette('green')\r\n      .accentPalette('lime')\r\n      .warnPalette('red');\r\n    $mdThemingProvider.theme('dark-grey').backgroundPalette('grey').dark().primaryPalette('grey');\r\n    $mdThemingProvider.theme('dark-green').backgroundPalette('green').dark().primaryPalette('green');\r\n    $mdThemingProvider.theme('dark-orange').backgroundPalette('orange').dark().primaryPalette('orange');\r\n    $mdThemingProvider.theme('dark-purple').backgroundPalette('deep-purple').dark().primaryPalette('deep-purple');\r\n    $mdThemingProvider.theme('dark-blue').backgroundPalette('blue').dark().primaryPalette('blue');\r\n  })\r\n  .constant('API', 'https://iot.jorgesolis.me/api/');\r\n","(function () {\r\n  'use strict';\r\n\r\n  angular\r\n  .module('app')\r\n  .component('myToolbar', {\r\n    templateUrl: 'app/components/toolbar/toolbar.html',\r\n    controller: toolbarCtrl,\r\n    controllerAs: 'vm'\r\n  });\r\n\r\n  toolbarCtrl.$inject = ['CredentialsService', '$state', '$rootScope'];\r\n\r\n  function toolbarCtrl(CredentialsService, $state, $rootScope) {\r\n    var vm = this;\r\n\r\n    vm.isLogged = CredentialsService.isLogged();\r\n\r\n    vm.logout = function () {\r\n      CredentialsService.clearCredentials();\r\n      vm.isLogged = false;\r\n      $state.go('login');\r\n    };\r\n    \r\n    $rootScope.$on('isLogin', function () {\r\n      vm.isLogged = true;\r\n    });\r\n  }\r\n})();\r\n","(function () {\r\n  'use strict';\r\n\r\n  angular\r\n  .module('app')\r\n  .service('PeliculasService', peliculasService);\r\n\r\n  peliculasService.$inject = ['$resource', 'API'];\r\n\r\n  function peliculasService($resource, API) {\r\n    return $resource(API + 'peliculas/:id', {id: '@id'});\r\n  }\r\n})();\r\n","(function () {\r\n  'use strict';\r\n\r\n  angular\r\n  .module('app')\r\n  .component('peliculas', {\r\n    templateUrl: 'app/components/peliculas/peliculas.html',\r\n    controller: peliculasCtrl,\r\n    controllerAs: 'vm'\r\n  });\r\n\r\n  peliculasCtrl.$inject = ['PeliculasService'];\r\n\r\n  function peliculasCtrl(PeliculasService) {\r\n    var vm = this;\r\n\r\n    vm.peliculas = [];\r\n\r\n    PeliculasService.query().$promise.then(function (data) {\r\n      vm.peliculas = data;\r\n    });\r\n  }\r\n})();\r\n","(function () {\r\n  'use strict';\r\n\r\n  angular\r\n  .module('app')\r\n  .service('LoginService', loginService);\r\n\r\n  loginService.$inject = ['$resource', 'API'];\r\n\r\n  function loginService($resource, API) {\r\n    return $resource(API + 'login');\r\n  }\r\n})();\r\n","(function () {\r\n  'use strict';\r\n\r\n  angular\r\n  .module('app')\r\n  .component('login', {\r\n    templateUrl: 'app/components/login/login.html',\r\n    controller: loginCtrl,\r\n    controllerAs: 'vm'\r\n  });\r\n\r\n  loginCtrl.$inject = ['LoginService', 'CredentialsService', '$state', '$rootScope'];\r\n\r\n  function loginCtrl(LoginService, CredentialsService, $state, $rootScope) {\r\n    var vm = this;\r\n    vm.loginError = false;\r\n\r\n    vm.credentials = {};\r\n\r\n    vm.login = function (credentials) {\r\n      LoginService.save(credentials, function (data) {\r\n        CredentialsService.setToken(data.token);\r\n        CredentialsService.setUser(data.email);\r\n        $rootScope.$emit('isLogin');\r\n        //$state.go('peliculas');\r\n      }, function (error) {\r\n        vm.loginError = true;\r\n      });\r\n    };\r\n    vm.login = function (credentials) {\r\n      LoginService.save(credentials, function (data) {\r\n        if(data.token) {\r\n          CredentialsService.setToken(data.token);\r\n          CredentialsService.setUser(data.email);\r\n          $rootScope.$emit('isLogin');\r\n          $state.go('dashboard');\r\n        }else{\r\n          vm.loginError = true;\r\n        }        \r\n      }, function (error) {\r\n        console.log(error);\r\n      });\r\n    };\r\n  }\r\n})();\r\n","(function () {\r\n  'use strict';\r\n\r\n  angular\r\n  .module('app')\r\n  .service('InterceptorApi', interceptorApi);\r\n\r\n  interceptorApi.$inject = ['CredentialsService'];\r\n\r\n  function interceptorApi(CredentialsService) {\r\n    var service = this;\r\n    service.request = function (config) {\r\n      config.headers.Authorization = CredentialsService.getToken() || '';\r\n      config.headers.Accept = 'application/json';\r\n      return config;\r\n    };\r\n    service.responseError = function (response) {\r\n      if (response.status === 401) {\r\n        CredentialsService.clearCredentials();\r\n      }\r\n      return response;\r\n    };\r\n  }\r\n})();\r\n","(function () {\r\n  'use strict';\r\n\r\n  angular\r\n  .module('app')\r\n  .service('CredentialsService', credentialsService);\r\n\r\n  function credentialsService() {\r\n    this.setToken = function (token) {\r\n      localStorage.setItem('token', token);\r\n    };\r\n\r\n    this.getToken = function () {\r\n      return localStorage.getItem('token');\r\n    };\r\n\r\n    this.setUser = function (user) {\r\n      localStorage.setItem('user', user);\r\n    };\r\n\r\n    this.getUser = function () {\r\n      return localStorage.getItem('user');\r\n    };\r\n\r\n    this.clearCredentials = function () {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n    };\r\n\r\n    this.isLogged = function () {\r\n      if (this.getToken() && this.getUser()) {\r\n        return true;\r\n      }\r\n      return false;\r\n    };\r\n  }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n  \r\n    angular\r\n    .module('app')\r\n    .component('dashboard', {\r\n      templateUrl: 'app/components/dashboard/dashboard.html',\r\n      controller: dashboardCtrl,\r\n      controllerAs: 'vm'\r\n    });\r\n  \r\n    dashboardCtrl.$inject = ['AsignaturaService'];\r\n  \r\n    function dashboardCtrl(AsignaturaService) {\r\n      var vm = this;\r\n\r\n      vm.asignaturas = {};\r\n\r\n      AsignaturaService.query().$promise.then(function (data) {\r\n        vm.asignaturas = data;\r\n        console.log(vm.asignaturas);\r\n      });\r\n  \r\n    }\r\n  })();\r\n  ","(function () {\n    'use strict';\n  \n    angular\n    .module('app')\n    .service('AsignaturaService', asignaturaService);\n  \n    asignaturaService.$inject = ['$resource', 'API'];\n  \n    function asignaturaService($resource, API) {\n      return $resource(API + 'asignaturaprofesor');\n    }\n})();\n","angular.module('app').run(['$templateCache', function($templateCache) {$templateCache.put('app/components/asignaturas/asignaturas.html','<div layout=\"row\" layout-align=\"start\">\\r\\n    <h1>Mis Asignaturas</h1>\\r\\n</div>');\n$templateCache.put('app/components/asistencias/asistencias.html','');\n$templateCache.put('app/components/dashboard/dashboard.html','<div layout=\"row\" layout-align=\"center start\">\\r\\n    <h1>Panel de Control</h1>\\r\\n</div>\\r\\n\\r\\n<div layout layout-wrap>\\r\\n    <md-card md-colors=\"{background: \\'blue-900\\'}\" flex=\"30\" flex-xs=\"100\" ng-repeat=\"asignatura in vm.asignaturas\">\\r\\n      <md-card-title>\\r\\n        <md-card-title-text>\\r\\n          <span class=\"md-headline\">{{ asignatura.nombre }}</span>\\r\\n        </md-card-title-text>\\r\\n      </md-card-title>\\r\\n      <md-card-content>\\r\\n        <p>C\\xF3digo: {{ asignatura.codigo }}</p>\\r\\n        <p>Descripcion: {{ asignatura.descripcion }}</p>\\r\\n      </md-card-content>\\r\\n      <md-card-actions layout=\"row\" layout-align=\"start center\">\\r\\n        <md-button class=\"md-raised\">Ver Asignatura</md-button>\\r\\n      </md-card-actions>\\r\\n    </md-card>\\r\\n  \\r\\n</div>');\n$templateCache.put('app/components/login/login.html','<div layout=\"row\" layout-align=\"center start\">\\r\\n  <h1>Iniciar Sesi\\xF3n</h1>\\r\\n</div>\\r\\n\\r\\n<div flex-gt-md=\"50\" flex-offset-gt-md=\"25\" flex-xs=\"90\" flex-offset-xs=\"5\">\\r\\n\\t<form ng-submit=\"vm.login(vm.credentials)\">\\r\\n\\t\\t<div layout=\"column\">\\r\\n\\t\\t<md-input-container class=\"md-icon-float md-block\" flex=\"50\">\\r\\n\\t\\t\\t\\t<label>Email</label>\\r\\n\\t\\t\\t\\t<input ng-model=\"vm.credentials.email\" type=\"text\" required>\\r\\n\\t\\t\\t</md-input-container>\\t\\r\\n\\r\\n\\t\\t\\t<md-input-container class=\"md-icon-float md-block\" flex>\\r\\n\\t\\t\\t\\t<label>Contrase\\xF1a</label>\\r\\n\\t\\t\\t\\t<input ng-model=\"vm.credentials.password\" type=\"password\" required>\\r\\n\\t\\t\\t</md-input-container>\\t\\r\\n\\t\\t\\t<span ng-if=\"vm.loginError\" style=\"color: red\">Credenciales erroneas</span>\\r\\n\\t\\t<md-button type=\"submit\" class=\"login-button\" flex>Entrar</md-button>\\r\\n\\t</div>\\r\\n\\t</form>\\r\\n</div>\\r\\n');\n$templateCache.put('app/components/peliculas/peliculas.html','<div layout=\"row\" layout-align=\"center start\">\\r\\n  <h1>Peliculas</h1>\\r\\n</div>\\r\\n\\r\\n<div layout layout-wrap>\\r\\n  <md-card md-colors=\"{background: \\'blue-900\\'}\" flex=\"30\" flex-xs=\"100\" ng-repeat=\"pelicula in vm.peliculas\">\\r\\n    <md-card-title>\\r\\n      <md-card-title-text>\\r\\n        <span class=\"md-headline\">{{ pelicula.titulo }}</span>\\r\\n      </md-card-title-text>\\r\\n    </md-card-title>\\r\\n    <md-card-content>\\r\\n      <p>Director: {{ pelicula.director }}</p>\\r\\n      <p>Descripcion: {{ pelicula.descripcion }}</p>\\r\\n    </md-card-content>\\r\\n    <md-card-actions layout=\"row\" layout-align=\"start center\">\\r\\n      <md-button class=\"md-raised\">Ver Pelicula</md-button>\\r\\n    </md-card-actions>\\r\\n  </md-card>\\r\\n\\r\\n</div>');\n$templateCache.put('app/components/toolbar/toolbar.html','<md-toolbar style=\"background-color: #0F3761\" class=\"md-hue-2\">\\r\\n  <div class=\"md-toolbar-tools\">\\r\\n    <h2 ui-sref=\"app\" flex md-truncate>Asistenciapp</h2>\\r\\n    <span flex></span>\\r\\n    <md-button ng-if=\"!vm.isLogged\" ui-sref=\"login\">\\r\\n      Iniciar Sesion\\r\\n    </md-button>\\r\\n    <md-button ng-if=\"vm.isLogged\" ng-click=\"vm.logout()\">\\r\\n      Cerrar Sesion\\r\\n    </md-button>\\r\\n  </div>\\r\\n</md-toolbar>');}]);"]}